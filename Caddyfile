{
    log {
        level info
    }
    cache {
         badger {
            configuration {
                # 缓存目录设置
                Dir {$BADGER_CACHE}
                ValueDir {$BADGER_CONFIG}
                # 日志文件的大小 目前是16MB
                ValueLogFileSize 16777216
                # 占用内存大小 4MB
                MemTableSize 4194304
                #写入 vlog文件的大小
                ValueThreshold 524288
            }
        }
    }
}
(redir302_block) {
    route {
        header Cache-Control "max-age=3600"
        redir302 {
            # jellyfin或 emby的 server
            media_server {$MEDIA_SERVER}
            # jellyfin或 emby 的 token
            api_key {$MEDIA_TOKEN}
            # 115的 cookie
            cookie115 {$COOKIE_115}
            # 缓存时长，0 为不缓存,以分钟为单位
            cache115 {$CACHE115}
            # 缓存占用空间大小,单位MB
            cache115_size {$CACHE115_SZIE}
            # 从头开始匹配这个path 的才会走 115 302，比如本地盘和 115 混合的时候很有用，如果只是 115，则可以不配置这个路径
            match_redir_115 {$MATCH_REDIR_115}
            # 路径替换，将 jellyfin 的路径替换成 115 网盘的真实路径
            origin_path {$ORIGIN_PATH}
            # 目标路径，都是从头开始匹配
            replace_path {$REPLACE_PATH} 
        }
    }
}

:8082 {
    encode gzip 
    @media path_regexp (?i)(audio/[^/]+/(universal|stream)|(items/[^/]+/Download)|(sync/jobItems/[^/]+/File)|(videos/[^/]+/(stream|original)))
    
    @imgs path_regexp (?i)/Items/(.*)/Images
    @subtitles path_regexp (?i)/videos/(.*)/Subtitles
    # 重定向到网盘
    handle @media {
        import redir302_block
    }

    # 将请求的图片缓存到caddy下
    handle @imgs {
        cache {
            # 10 分钟内重复的请求将直接走缓存
            ttl 30d
            # 多少时间后重新校验，当然如果客户端返回立即校验的 cache-control则会立即校验
            stale 1d
        }
    }
    # 将字母缓存到caddy下, 如果不想要缓存，可以直接删除这一段
    handle @subtitles {
        cache {
            # 10 分钟内重复的请求将直接走缓存
            ttl 30d
            # 多少时间后重新校验，当然如果客户端返回立即校验的 cache-control则会立即校验
            stale 1d
        }
    }

    reverse_proxy {$MEDIA_SERVER} {
        header_up Host {http.reverse_proxy.upstream.hostport}
        header_up X-Real-IP {http.request.remote}
        # header_up User-Agent {>User-Agent}
    }
}